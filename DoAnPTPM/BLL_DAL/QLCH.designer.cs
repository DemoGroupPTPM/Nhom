#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BLL_DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_CUAHANGDT")]
	public partial class QLCHDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCHUCNANG(CHUCNANG instance);
    partial void UpdateCHUCNANG(CHUCNANG instance);
    partial void DeleteCHUCNANG(CHUCNANG instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertCTPHANQUYEN(CTPHANQUYEN instance);
    partial void UpdateCTPHANQUYEN(CTPHANQUYEN instance);
    partial void DeleteCTPHANQUYEN(CTPHANQUYEN instance);
    partial void InsertPHANQUYEN(PHANQUYEN instance);
    partial void UpdatePHANQUYEN(PHANQUYEN instance);
    partial void DeletePHANQUYEN(PHANQUYEN instance);
    #endregion
		
		public QLCHDataContext() : 
				base(global::BLL_DAL.Properties.Settings.Default.QL_CUAHANGDTConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLCHDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLCHDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLCHDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLCHDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CHUCNANG> CHUCNANGs
		{
			get
			{
				return this.GetTable<CHUCNANG>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<CTPHANQUYEN> CTPHANQUYENs
		{
			get
			{
				return this.GetTable<CTPHANQUYEN>();
			}
		}
		
		public System.Data.Linq.Table<PHANQUYEN> PHANQUYENs
		{
			get
			{
				return this.GetTable<PHANQUYEN>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHUCNANG")]
	public partial class CHUCNANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MACHUCNANG;
		
		private string _TENCHUCNANG;
		
		private EntitySet<CTPHANQUYEN> _CTPHANQUYENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMACHUCNANGChanging(string value);
    partial void OnMACHUCNANGChanged();
    partial void OnTENCHUCNANGChanging(string value);
    partial void OnTENCHUCNANGChanged();
    #endregion
		
		public CHUCNANG()
		{
			this._CTPHANQUYENs = new EntitySet<CTPHANQUYEN>(new Action<CTPHANQUYEN>(this.attach_CTPHANQUYENs), new Action<CTPHANQUYEN>(this.detach_CTPHANQUYENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACHUCNANG", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MACHUCNANG
		{
			get
			{
				return this._MACHUCNANG;
			}
			set
			{
				if ((this._MACHUCNANG != value))
				{
					this.OnMACHUCNANGChanging(value);
					this.SendPropertyChanging();
					this._MACHUCNANG = value;
					this.SendPropertyChanged("MACHUCNANG");
					this.OnMACHUCNANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENCHUCNANG", DbType="NVarChar(50)")]
		public string TENCHUCNANG
		{
			get
			{
				return this._TENCHUCNANG;
			}
			set
			{
				if ((this._TENCHUCNANG != value))
				{
					this.OnTENCHUCNANGChanging(value);
					this.SendPropertyChanging();
					this._TENCHUCNANG = value;
					this.SendPropertyChanged("TENCHUCNANG");
					this.OnTENCHUCNANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUCNANG_CTPHANQUYEN", Storage="_CTPHANQUYENs", ThisKey="MACHUCNANG", OtherKey="MACHUCNANG")]
		public EntitySet<CTPHANQUYEN> CTPHANQUYENs
		{
			get
			{
				return this._CTPHANQUYENs;
			}
			set
			{
				this._CTPHANQUYENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTPHANQUYENs(CTPHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.CHUCNANG = this;
		}
		
		private void detach_CTPHANQUYENs(CTPHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.CHUCNANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANV;
		
		private string _TENDN;
		
		private string _MATKHAU;
		
		private string _TENNV;
		
		private string _DIACHI;
		
		private string _DIENTHOAI;
		
		private string _MAPHANQUYEN;
		
		private string _CHUTHICH;
		
		private EntityRef<PHANQUYEN> _PHANQUYEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnTENDNChanging(string value);
    partial void OnTENDNChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    partial void OnTENNVChanging(string value);
    partial void OnTENNVChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnDIENTHOAIChanging(string value);
    partial void OnDIENTHOAIChanged();
    partial void OnMAPHANQUYENChanging(string value);
    partial void OnMAPHANQUYENChanged();
    partial void OnCHUTHICHChanging(string value);
    partial void OnCHUTHICHChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._PHANQUYEN = default(EntityRef<PHANQUYEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENDN", DbType="NVarChar(50)")]
		public string TENDN
		{
			get
			{
				return this._TENDN;
			}
			set
			{
				if ((this._TENDN != value))
				{
					this.OnTENDNChanging(value);
					this.SendPropertyChanging();
					this._TENDN = value;
					this.SendPropertyChanged("TENDN");
					this.OnTENDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="NVarChar(100)")]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNV", DbType="NVarChar(100)")]
		public string TENNV
		{
			get
			{
				return this._TENNV;
			}
			set
			{
				if ((this._TENNV != value))
				{
					this.OnTENNVChanging(value);
					this.SendPropertyChanging();
					this._TENNV = value;
					this.SendPropertyChanged("TENNV");
					this.OnTENNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(100)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIENTHOAI", DbType="NVarChar(10)")]
		public string DIENTHOAI
		{
			get
			{
				return this._DIENTHOAI;
			}
			set
			{
				if ((this._DIENTHOAI != value))
				{
					this.OnDIENTHOAIChanging(value);
					this.SendPropertyChanging();
					this._DIENTHOAI = value;
					this.SendPropertyChanged("DIENTHOAI");
					this.OnDIENTHOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHANQUYEN", DbType="NVarChar(50)")]
		public string MAPHANQUYEN
		{
			get
			{
				return this._MAPHANQUYEN;
			}
			set
			{
				if ((this._MAPHANQUYEN != value))
				{
					if (this._PHANQUYEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHANQUYENChanging(value);
					this.SendPropertyChanging();
					this._MAPHANQUYEN = value;
					this.SendPropertyChanged("MAPHANQUYEN");
					this.OnMAPHANQUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHUTHICH", DbType="NVarChar(100)")]
		public string CHUTHICH
		{
			get
			{
				return this._CHUTHICH;
			}
			set
			{
				if ((this._CHUTHICH != value))
				{
					this.OnCHUTHICHChanging(value);
					this.SendPropertyChanging();
					this._CHUTHICH = value;
					this.SendPropertyChanged("CHUTHICH");
					this.OnCHUTHICHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHANQUYEN_NHANVIEN", Storage="_PHANQUYEN", ThisKey="MAPHANQUYEN", OtherKey="MAPHANQUYEN", IsForeignKey=true)]
		public PHANQUYEN PHANQUYEN
		{
			get
			{
				return this._PHANQUYEN.Entity;
			}
			set
			{
				PHANQUYEN previousValue = this._PHANQUYEN.Entity;
				if (((previousValue != value) 
							|| (this._PHANQUYEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHANQUYEN.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._PHANQUYEN.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._MAPHANQUYEN = value.MAPHANQUYEN;
					}
					else
					{
						this._MAPHANQUYEN = default(string);
					}
					this.SendPropertyChanged("PHANQUYEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTPHANQUYEN")]
	public partial class CTPHANQUYEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPHANQUYEN;
		
		private string _MACHUCNANG;
		
		private EntityRef<CHUCNANG> _CHUCNANG;
		
		private EntityRef<PHANQUYEN> _PHANQUYEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHANQUYENChanging(string value);
    partial void OnMAPHANQUYENChanged();
    partial void OnMACHUCNANGChanging(string value);
    partial void OnMACHUCNANGChanged();
    #endregion
		
		public CTPHANQUYEN()
		{
			this._CHUCNANG = default(EntityRef<CHUCNANG>);
			this._PHANQUYEN = default(EntityRef<PHANQUYEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHANQUYEN", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHANQUYEN
		{
			get
			{
				return this._MAPHANQUYEN;
			}
			set
			{
				if ((this._MAPHANQUYEN != value))
				{
					if (this._PHANQUYEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHANQUYENChanging(value);
					this.SendPropertyChanging();
					this._MAPHANQUYEN = value;
					this.SendPropertyChanged("MAPHANQUYEN");
					this.OnMAPHANQUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACHUCNANG", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MACHUCNANG
		{
			get
			{
				return this._MACHUCNANG;
			}
			set
			{
				if ((this._MACHUCNANG != value))
				{
					if (this._CHUCNANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMACHUCNANGChanging(value);
					this.SendPropertyChanging();
					this._MACHUCNANG = value;
					this.SendPropertyChanged("MACHUCNANG");
					this.OnMACHUCNANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUCNANG_CTPHANQUYEN", Storage="_CHUCNANG", ThisKey="MACHUCNANG", OtherKey="MACHUCNANG", IsForeignKey=true)]
		public CHUCNANG CHUCNANG
		{
			get
			{
				return this._CHUCNANG.Entity;
			}
			set
			{
				CHUCNANG previousValue = this._CHUCNANG.Entity;
				if (((previousValue != value) 
							|| (this._CHUCNANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHUCNANG.Entity = null;
						previousValue.CTPHANQUYENs.Remove(this);
					}
					this._CHUCNANG.Entity = value;
					if ((value != null))
					{
						value.CTPHANQUYENs.Add(this);
						this._MACHUCNANG = value.MACHUCNANG;
					}
					else
					{
						this._MACHUCNANG = default(string);
					}
					this.SendPropertyChanged("CHUCNANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHANQUYEN_CTPHANQUYEN", Storage="_PHANQUYEN", ThisKey="MAPHANQUYEN", OtherKey="MAPHANQUYEN", IsForeignKey=true)]
		public PHANQUYEN PHANQUYEN
		{
			get
			{
				return this._PHANQUYEN.Entity;
			}
			set
			{
				PHANQUYEN previousValue = this._PHANQUYEN.Entity;
				if (((previousValue != value) 
							|| (this._PHANQUYEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHANQUYEN.Entity = null;
						previousValue.CTPHANQUYENs.Remove(this);
					}
					this._PHANQUYEN.Entity = value;
					if ((value != null))
					{
						value.CTPHANQUYENs.Add(this);
						this._MAPHANQUYEN = value.MAPHANQUYEN;
					}
					else
					{
						this._MAPHANQUYEN = default(string);
					}
					this.SendPropertyChanged("PHANQUYEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHANQUYEN")]
	public partial class PHANQUYEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPHANQUYEN;
		
		private string _MANHINH;
		
		private string _CHUTHICH;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
		private EntitySet<CTPHANQUYEN> _CTPHANQUYENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHANQUYENChanging(string value);
    partial void OnMAPHANQUYENChanged();
    partial void OnMANHINHChanging(string value);
    partial void OnMANHINHChanged();
    partial void OnCHUTHICHChanging(string value);
    partial void OnCHUTHICHChanged();
    #endregion
		
		public PHANQUYEN()
		{
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			this._CTPHANQUYENs = new EntitySet<CTPHANQUYEN>(new Action<CTPHANQUYEN>(this.attach_CTPHANQUYENs), new Action<CTPHANQUYEN>(this.detach_CTPHANQUYENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHANQUYEN", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHANQUYEN
		{
			get
			{
				return this._MAPHANQUYEN;
			}
			set
			{
				if ((this._MAPHANQUYEN != value))
				{
					this.OnMAPHANQUYENChanging(value);
					this.SendPropertyChanging();
					this._MAPHANQUYEN = value;
					this.SendPropertyChanged("MAPHANQUYEN");
					this.OnMAPHANQUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANHINH", DbType="NVarChar(50)")]
		public string MANHINH
		{
			get
			{
				return this._MANHINH;
			}
			set
			{
				if ((this._MANHINH != value))
				{
					this.OnMANHINHChanging(value);
					this.SendPropertyChanging();
					this._MANHINH = value;
					this.SendPropertyChanged("MANHINH");
					this.OnMANHINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHUTHICH", DbType="NVarChar(100)")]
		public string CHUTHICH
		{
			get
			{
				return this._CHUTHICH;
			}
			set
			{
				if ((this._CHUTHICH != value))
				{
					this.OnCHUTHICHChanging(value);
					this.SendPropertyChanging();
					this._CHUTHICH = value;
					this.SendPropertyChanged("CHUTHICH");
					this.OnCHUTHICHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHANQUYEN_NHANVIEN", Storage="_NHANVIENs", ThisKey="MAPHANQUYEN", OtherKey="MAPHANQUYEN")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHANQUYEN_CTPHANQUYEN", Storage="_CTPHANQUYENs", ThisKey="MAPHANQUYEN", OtherKey="MAPHANQUYEN")]
		public EntitySet<CTPHANQUYEN> CTPHANQUYENs
		{
			get
			{
				return this._CTPHANQUYENs;
			}
			set
			{
				this._CTPHANQUYENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.PHANQUYEN = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.PHANQUYEN = null;
		}
		
		private void attach_CTPHANQUYENs(CTPHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.PHANQUYEN = this;
		}
		
		private void detach_CTPHANQUYENs(CTPHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.PHANQUYEN = null;
		}
	}
}
#pragma warning restore 1591
